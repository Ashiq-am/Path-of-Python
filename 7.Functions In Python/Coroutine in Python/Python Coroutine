In Python, coroutines are similar to generators but with few extra methods and slight change in
how we use yield statement. Generators produce data for iteration while coroutines can also consume data.

In Python 2.5, a slight modification to the yield statement was introduced,
now yield can also be used as expression. For example on the right side of the assignment –

line = (yield)


whatever value we send to coroutine is captured and returned by (yield) expression.
A value can be send to the coroutine by send() method. For example,
consider this coroutine which print out name having prefix “Dear” in it.

We will send names to coroutine using send() method.