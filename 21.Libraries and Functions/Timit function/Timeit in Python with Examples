This article will introduce you to a method of measuring the execution time of your python code snippets.
We will be using an in-built python library timeit.



Why timeit?




1.Well, how about using simple time module? Just save the time before and after the execution of code and
subtract them! But this method is not precise as there might be a background process momentarily running
which disrupts the code execution and you will get significant variations in running time of small code snippets.



2.timeit runs your snippet of code millions of time (default value is 1000000) so that you get the
statistically most relevant measurement of code execution time!



3.timeit is pretty simple to use and has a command line interface as well as a callable one.









So now, let’s start exploring this handy library!





The module function timeit.timeit(stmt, setup, timer, number) accepts four arguments:



***stmt which is the statement you want to measure; it defaults to ‘pass’.



***setup which is the code that you run before running the stmt; it defaults to ‘pass’.We generally use this
    to import the required modules for our code.



***timer which is a timeit.Timer object; it usually has a sensible default value so you don’t have to worry
   about it.



***number which is the number of executions you’d like to run the stmt.

