1.pickle.dump(obj, file, protocol = None, *, fix_imports = True):-

This function is equivalent to Pickler(file, protocol).dump(obj). This is used to write a pickled representation of obj
to the open file object file.

The optional protocol argument is an integer that tells the pickler to use the given protocol.
The supported protocols are 0 to HIGHEST_PROTOCOL. If not specified, the default is DEFAULT_PROTOCOL.
If a negative number is specified, HIGHEST_PROTOCOL is selected.

If fix_imports is true and protocol is less than 3, pickle will try to map the new Python 3 names to the old
module names used in Python 2, so that the pickle data stream is readable with Python 2.









2.pickle.dumps(obj, protocol = None, *, fix_imports = True):-

This function returns the pickled representation of the object as a bytes object.










3.pickle.load(file, *, fix_imports = True, encoding = “ASCII”, errors = “strict”):-

This function is equivalent to Unpickler(file).load(). This function is used to read a pickled object representation
from the open file object file and return the reconstituted object hierarchy specified.






4.pickle.loads(bytes_object, *, fix_imports = True, encoding = “ASCII”, errors = “strict”)

This function is used to read a pickled object representation from a bytes object and return the reconstituted
object hierarchy specified.