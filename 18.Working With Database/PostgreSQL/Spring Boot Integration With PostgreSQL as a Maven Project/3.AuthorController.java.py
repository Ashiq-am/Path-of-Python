""





'''

import org.springframework.beans.factory.annotation.Autowired; 
import org.springframework.stereotype.Controller; 
import org.springframework.web.bind.annotation.GetMapping; 
import org.springframework.web.bind.annotation.PostMapping; 
import org.springframework.web.bind.annotation.RequestMapping; 
import org.springframework.web.bind.annotation.RequestParam; 
import org.springframework.web.bind.annotation.ResponseBody; 

import com.gfg.postgresql.model.geek_author; 
import com.gfg.postgresql.repository.AuthorRepository; 

// This means that this 
// class is a Controller 
@Controller	

// This means URL's start with /geek (after Application path) 
@RequestMapping(path="/geek") 
public class AuthorController { 
	
	// This means to get the bean called geekuserRepository 
	// Which is auto-generated by Spring, we will use it 
	// to handle the data 
	@Autowired
	private AuthorRepository authorRepository; 

	// Map ONLY POST Requests 
	@PostMapping(path="/addauthor") 
	public @ResponseBody String addAuthors (@RequestParam String author_name 
			, @RequestParam String email_id) { 
		
		// @ResponseBody means the returned String 
		// is the response, not a view name 
		// @RequestParam means it is a parameter 
		// from the GET or POST request	 
		geek_author geekAuthor = new geek_author(); 
		
		geekAuthor.setAuthor_name(author_name); 
		geekAuthor.setEmail_id(email_id); 
		authorRepository.save(geekAuthor); 
		return "Details got Saved"; 
	} 

	@GetMapping(path="/authors") 
	public @ResponseBody Iterable<geek_author> getAllAuthors() { 
		// This returns a JSON or 
		// XML with the Book 
		return authorRepository.findAll(); 
	} 
} 







'''