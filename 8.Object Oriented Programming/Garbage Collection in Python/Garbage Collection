Pythonâ€™s memory allocation and deallocation method is automatic.
The user does not have to preallocate or deallocate memory similar to using dynamic memory allocation in languages such as C or C++.
Python uses two strategies for memory allocation:

1.Reference counting
2.Garbage collection



Prior to Python version 2.0, the Python interpreter only used reference counting for memory management.
Reference counting works by counting the number of times an object is referenced by other objects in the system.
When references to an object are removed, the reference count for an object is decremented.
When the reference count becomes zero, the object is deallocated